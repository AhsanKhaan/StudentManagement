openapi: 3.0.0
info:
    title: 'Ecommerce Application'
    version: 1.0.0
    description: 'API documentation for Ecommerce application'
components:
    securitySchemes: {Auth: {type: apiKey, in: header, name: Authorization}}
security:
    - {Auth: []}
basePath: 'localhost:8080/'
paths:
    /api/v1/auth/users: {get: {summary: 'Get logged-in user data', tags: [Authentication], security: [{BearerAuth: []}], responses: {'200': {description: 'Successful response', content: {application/json: {example: {_id: 603ddca3fd6e1d396055bee0, name: 'John Doe', email: john@example.com, createdAt: '2022-02-01T10:00:00.000Z', updatedAt: '2022-02-01T12:00:00.000Z'}}}}, '401': {description: Unauthorized}, '500': {description: 'Internal server error'}}}}
    /api/v1/courses: {post: {summary: 'Get all courses', tags: [Courses], security: [{Auth: []}], requestBody: {required: false, content: {application/json: {example: {category: DIGITAL_MARKETING}}}}, responses: {'200': {description: 'Successful response', content: {application/json: {example: {category: DIGITAL_MARKETING}}}}, '403': {description: Unauthorized}, '500': {description: 'Internal server error'}}}}
    /api/v1/course/create: {post: {summary: 'Create a new Course', tags: [Courses], security: [{Auth: []}], requestBody: {required: true, content: {application/json: {example: {name: 'Website Development-I', description: 'This includes details of HTML,CSS3,Javascript', category: WEB_DEVELOPMENT}}}}, responses: {'200': {description: 'Successful response', content: {application/json: {example: {msg: 'Course inserted Successfully!'}}}}, '400': {description: 'Bad Request'}, '403': {description: 'You Don''t Have Access this Resource'}, '500': {description: 'Internal server error'}}}}
    /api/v1/orders: {post: {summary: 'Get all orders', tags: [Orders], security: [{Auth: []}], requestBody: {required: false, content: {application/json: {example: {status: PENDING}}}}, responses: {'200': {description: 'Successful response', content: {application/json: {example: {status: PENDING}}}}, '401': {description: Unauthorized}, '500': {description: 'Internal server error'}}}}
    /api/v1/orders/create: {post: {summary: 'Create a new Product', tags: [Products], security: [{Auth: []}], requestBody: {required: true, content: {application/json: {example: {name: 'Head Phone', description: 'This is Wireless Headphone', price: 10, stock: 100, maxQuantityPerOrder: 2, category: Electronics}}}}, responses: {'200': {description: 'Successful response', content: {application/json: {example: {msg: 'Product inserted Successfully!'}}}}, '400': {description: 'Bad Request'}, '403': {description: 'You Don''t Have Access this Resource'}, '500': {description: 'Internal server error'}}}}
    /api/v1/users/signup: {post: {summary: 'Student SignUp', tags: [student], requestBody: {required: true, content: {application/json: {schema: {type: object, properties: {username: {type: string, description: 'username should be unique'}, email: {type: string, format: email, description: 'User''s email address'}, password: {type: string, format: password, description: 'User''s password (at least 6 characters)'}}}}}}, responses: {'200': {description: 'Successful signup', content: {application/json: {example: {token: '<JWT_TOKEN>'}}}}, '400': {description: 'Bad request (validation errors)', content: {application/json: {example: {errors: [{msg: 'Please enter valid username.'}, {msg: 'Please enter your email address.'}, {msg: 'Password must be strong (include uppercase, lowercase, number, and special character).'}]}}}}, '409': {description: 'Conflict (user already exists)', content: {application/json: {example: {msg: 'Student already exists'}}}}, '500': {description: 'Internal server error', content: {application/json: {example: {msg: 'Server error'}}}}}}}
    /api/v1/users/login: {post: {summary: 'Student login', tags: [student], requestBody: {required: true, content: {application/json: {schema: {type: object, properties: {email: {type: string, format: email, description: 'User''s email address'}, password: {type: string, format: password, description: 'User''s password (at least 6 characters)'}}}}}}, responses: {'200': {description: 'Successful login', content: {application/json: {example: {token: '<JWT_TOKEN>'}}}}, '400': {description: 'Bad request (validation errors)', content: {application/json: {example: {errors: [{msg: 'Please enter your email address.'}, {msg: 'Please insert at least 6 characters.'}]}}}}, '409': {description: 'Bad request ( user not exists)', content: {application/json: {example: {msg: 'User Not exists'}}}}, '500': {description: 'Internal server error', content: {application/json: {example: {msg: 'Server error'}}}}}}}
    /api/v1/users/teacher-signup: {post: {summary: 'Teacher SignUp', tags: [teacher], requestBody: {required: true, content: {application/json: {schema: {type: object, properties: {username: {type: string, description: 'username should be unique'}, email: {type: string, format: email, description: 'User''s email address'}, password: {type: string, format: password, description: 'User''s password (at least 6 characters)'}}}}}}, responses: {'200': {description: 'Successful signup', content: {application/json: {example: {token: '<JWT_TOKEN>'}}}}, '400': {description: 'Bad request (validation errors)', content: {application/json: {example: {errors: [{msg: 'Please enter valid username.'}, {msg: 'Please enter your email address.'}, {msg: 'Password must be strong (include uppercase, lowercase, number, and special character).'}]}}}}, '409': {description: 'Conflict (user already exists)', content: {application/json: {example: {msg: 'User already exists'}}}}, '500': {description: 'Internal server error', content: {application/json: {example: {msg: 'Server error'}}}}}}}
    /api/v1/users/teacher-login: {post: {summary: 'Teacher login', tags: [teacher], requestBody: {required: true, content: {application/json: {schema: {type: object, properties: {email: {type: string, format: email, description: 'User''s email address'}, password: {type: string, format: password, description: 'User''s password (at least 6 characters)'}}}}}}, responses: {'200': {description: 'Successful login', content: {application/json: {example: {token: '<JWT_TOKEN>'}}}}, '400': {description: 'Bad request (validation errors)', content: {application/json: {example: {errors: [{msg: 'Please enter your email address.'}, {msg: 'Please insert at least 6 characters.'}]}}}}, '409': {description: 'Bad request ( user not exists)', content: {application/json: {example: {msg: 'User Not exists'}}}}, '500': {description: 'Internal server error', content: {application/json: {example: {msg: 'Server error'}}}}}}}
tags:
    - {name: Authentication, description: 'User authentication and profile retrieval'}
    - {name: Courses, description: 'API operations related to courses'}
    - {name: Orders, description: 'API operations related to orders'}
    - {name: student, description: 'Student Signup and Login'}
    - {name: teacher, description: 'Teacher Signup and Login'}
